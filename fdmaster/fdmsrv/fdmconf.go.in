/*
 * Copyright 2022 Oleg Borodin  <borodin@unix7.org>
 */

package main

import (
    "path/filepath"
    "os"
    "io/fs"
    "github.com/go-yaml/yaml"
    "fdump/dscomm/dserr"
)

const configName string = "@srv_name@.conf"

type Config struct {
    Port        string      `json:"port"    yaml:"port"`
    ConfDir     string      `json:"confDir" yaml:"confDir"`
    DataDir     string      `json:"dataDir" yaml:"dataDir"`
    LogDir      string      `json:"logDir"  yaml:"logDir"`
    RunDir      string      `json:"runDir"  yaml:"runDir"`

    AccName     string      `json:"-"       yaml:"-"`
    MsgName     string      `json:"-"       yaml:"-"`
    PidName     string      `json:"-"       yaml:"-"`

    FilePerm    fs.FileMode `json:"-"       yaml:"-"`
    DirPerm     fs.FileMode `json:"-"       yaml:"-"`

    DebugMode   bool        `json:"debug"   yaml:"debug"`
    DevelMode   bool        `json:"-"       yaml:"-"`

    SrvUser     string      `json:"srvUser" yaml:"srvUser"`
}

func NewConfig() *Config {
    var config Config
    config.RunDir   = "@srv_rundir@"
    config.LogDir   = "@srv_logdir@"
    config.DataDir  = "@srv_datadir@"
    config.ConfDir  = "@srv_confdir@"
    config.Port     = "@srv_port@"

    config.PidName  = "@srv_name@.pid"
    config.MsgName  = "message.log"
    config.AccName  = "access.log"

    config.FilePerm = 0644
    config.DirPerm  = 0755

    config.DebugMode = true
    config.DevelMode = true

    config.SrvUser = "@srv_user@"

    return &config
}

func (conf *Config) Read() error {
    var err error
    filename := filepath.Join(conf.ConfDir, configName)
    confData, err := os.ReadFile(filename)
    err = yaml.Unmarshal(confData, conf)
    if err != nil {
        return dserr.Err(err)
    }
    return dserr.Err(err)
}
